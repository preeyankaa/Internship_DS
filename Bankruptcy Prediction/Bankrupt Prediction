{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1cCF4-D_gurRw9VYHSlGhEsnNPQ2vPGu0","timestamp":1718949683385}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"4Cd4P1a8WQPs","executionInfo":{"status":"ok","timestamp":1718950115714,"user_tz":-330,"elapsed":2646,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import roc_curve, auc"]},{"cell_type":"code","source":["df = pd.read_csv('data.csv')"],"metadata":{"id":"Kn8YW4bzWlqz","executionInfo":{"status":"ok","timestamp":1718950121545,"user_tz":-330,"elapsed":447,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1z1OTZGDXkk-","executionInfo":{"status":"ok","timestamp":1718950127945,"user_tz":-330,"elapsed":510,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"4611733f-561b-47f1-fbea-703b8947520a"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(5620, 96)"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":342},"id":"Xeh1SiJGXiy9","executionInfo":{"status":"ok","timestamp":1718950140078,"user_tz":-330,"elapsed":472,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"4660ba4d-e03f-4456-dfe9-ea1c066086eb"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Bankrupt?   ROA(C) before interest and depreciation before interest  \\\n","0          1                                           0.370594          \n","1          1                                           0.464291          \n","2          1                                           0.426071          \n","3          1                                           0.399844          \n","4          1                                           0.465022          \n","\n","    ROA(A) before interest and % after tax  \\\n","0                                 0.424389   \n","1                                 0.538214   \n","2                                 0.499019   \n","3                                 0.451265   \n","4                                 0.538432   \n","\n","    ROA(B) before interest and depreciation after tax  \\\n","0                                           0.405750    \n","1                                           0.516730    \n","2                                           0.472295    \n","3                                           0.457733    \n","4                                           0.522298    \n","\n","    Operating Gross Margin   Realized Sales Gross Margin  \\\n","0                 0.601457                      0.601457   \n","1                 0.610235                      0.610235   \n","2                 0.601450                      0.601364   \n","3                 0.583541                      0.583541   \n","4                 0.598783                      0.598783   \n","\n","    Operating Profit Rate   Pre-tax net Interest Rate  \\\n","0                0.998969                    0.796887   \n","1                0.998946                    0.797380   \n","2                0.998857                    0.796403   \n","3                0.998700                    0.796967   \n","4                0.998973                    0.797366   \n","\n","    After-tax net Interest Rate   Non-industry income and expenditure/revenue  \\\n","0                      0.808809                                      0.302646   \n","1                      0.809301                                      0.303556   \n","2                      0.808388                                      0.302035   \n","3                      0.808966                                      0.303350   \n","4                      0.809304                                      0.303475   \n","\n","   ...   Net Income to Total Assets   Total assets to GNP price  \\\n","0  ...                     0.716845                    0.009219   \n","1  ...                     0.795297                    0.008323   \n","2  ...                     0.774670                    0.040003   \n","3  ...                     0.739555                    0.003252   \n","4  ...                     0.795016                    0.003878   \n","\n","    No-credit Interval   Gross Profit to Sales  \\\n","0             0.622879                0.601453   \n","1             0.623652                0.610237   \n","2             0.623841                0.601449   \n","3             0.622929                0.583538   \n","4             0.623521                0.598782   \n","\n","    Net Income to Stockholder's Equity   Liability to Equity  \\\n","0                             0.827890              0.290202   \n","1                             0.839969              0.283846   \n","2                             0.836774              0.290189   \n","3                             0.834697              0.281721   \n","4                             0.839973              0.278514   \n","\n","    Degree of Financial Leverage (DFL)  \\\n","0                             0.026601   \n","1                             0.264577   \n","2                             0.026555   \n","3                             0.026697   \n","4                             0.024752   \n","\n","    Interest Coverage Ratio (Interest expense to EBIT)   Net Income Flag  \\\n","0                                           0.564050                 1.0   \n","1                                           0.570175                 1.0   \n","2                                           0.563706                 1.0   \n","3                                           0.564663                 1.0   \n","4                                           0.575617                 1.0   \n","\n","    Equity to Liability  \n","0              0.016469  \n","1              0.020794  \n","2              0.016474  \n","3              0.023982  \n","4              0.035490  \n","\n","[5 rows x 96 columns]"],"text/html":["\n","  <div id=\"df-48134397-f410-4c53-8b44-d579872abf5b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bankrupt?</th>\n","      <th>ROA(C) before interest and depreciation before interest</th>\n","      <th>ROA(A) before interest and % after tax</th>\n","      <th>ROA(B) before interest and depreciation after tax</th>\n","      <th>Operating Gross Margin</th>\n","      <th>Realized Sales Gross Margin</th>\n","      <th>Operating Profit Rate</th>\n","      <th>Pre-tax net Interest Rate</th>\n","      <th>After-tax net Interest Rate</th>\n","      <th>Non-industry income and expenditure/revenue</th>\n","      <th>...</th>\n","      <th>Net Income to Total Assets</th>\n","      <th>Total assets to GNP price</th>\n","      <th>No-credit Interval</th>\n","      <th>Gross Profit to Sales</th>\n","      <th>Net Income to Stockholder's Equity</th>\n","      <th>Liability to Equity</th>\n","      <th>Degree of Financial Leverage (DFL)</th>\n","      <th>Interest Coverage Ratio (Interest expense to EBIT)</th>\n","      <th>Net Income Flag</th>\n","      <th>Equity to Liability</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.370594</td>\n","      <td>0.424389</td>\n","      <td>0.405750</td>\n","      <td>0.601457</td>\n","      <td>0.601457</td>\n","      <td>0.998969</td>\n","      <td>0.796887</td>\n","      <td>0.808809</td>\n","      <td>0.302646</td>\n","      <td>...</td>\n","      <td>0.716845</td>\n","      <td>0.009219</td>\n","      <td>0.622879</td>\n","      <td>0.601453</td>\n","      <td>0.827890</td>\n","      <td>0.290202</td>\n","      <td>0.026601</td>\n","      <td>0.564050</td>\n","      <td>1.0</td>\n","      <td>0.016469</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0.464291</td>\n","      <td>0.538214</td>\n","      <td>0.516730</td>\n","      <td>0.610235</td>\n","      <td>0.610235</td>\n","      <td>0.998946</td>\n","      <td>0.797380</td>\n","      <td>0.809301</td>\n","      <td>0.303556</td>\n","      <td>...</td>\n","      <td>0.795297</td>\n","      <td>0.008323</td>\n","      <td>0.623652</td>\n","      <td>0.610237</td>\n","      <td>0.839969</td>\n","      <td>0.283846</td>\n","      <td>0.264577</td>\n","      <td>0.570175</td>\n","      <td>1.0</td>\n","      <td>0.020794</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0.426071</td>\n","      <td>0.499019</td>\n","      <td>0.472295</td>\n","      <td>0.601450</td>\n","      <td>0.601364</td>\n","      <td>0.998857</td>\n","      <td>0.796403</td>\n","      <td>0.808388</td>\n","      <td>0.302035</td>\n","      <td>...</td>\n","      <td>0.774670</td>\n","      <td>0.040003</td>\n","      <td>0.623841</td>\n","      <td>0.601449</td>\n","      <td>0.836774</td>\n","      <td>0.290189</td>\n","      <td>0.026555</td>\n","      <td>0.563706</td>\n","      <td>1.0</td>\n","      <td>0.016474</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>0.399844</td>\n","      <td>0.451265</td>\n","      <td>0.457733</td>\n","      <td>0.583541</td>\n","      <td>0.583541</td>\n","      <td>0.998700</td>\n","      <td>0.796967</td>\n","      <td>0.808966</td>\n","      <td>0.303350</td>\n","      <td>...</td>\n","      <td>0.739555</td>\n","      <td>0.003252</td>\n","      <td>0.622929</td>\n","      <td>0.583538</td>\n","      <td>0.834697</td>\n","      <td>0.281721</td>\n","      <td>0.026697</td>\n","      <td>0.564663</td>\n","      <td>1.0</td>\n","      <td>0.023982</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>0.465022</td>\n","      <td>0.538432</td>\n","      <td>0.522298</td>\n","      <td>0.598783</td>\n","      <td>0.598783</td>\n","      <td>0.998973</td>\n","      <td>0.797366</td>\n","      <td>0.809304</td>\n","      <td>0.303475</td>\n","      <td>...</td>\n","      <td>0.795016</td>\n","      <td>0.003878</td>\n","      <td>0.623521</td>\n","      <td>0.598782</td>\n","      <td>0.839973</td>\n","      <td>0.278514</td>\n","      <td>0.024752</td>\n","      <td>0.575617</td>\n","      <td>1.0</td>\n","      <td>0.035490</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 96 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48134397-f410-4c53-8b44-d579872abf5b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-48134397-f410-4c53-8b44-d579872abf5b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-48134397-f410-4c53-8b44-d579872abf5b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d0caf5ea-4706-4cc1-9cdf-851b8c368b9f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0caf5ea-4706-4cc1-9cdf-851b8c368b9f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d0caf5ea-4706-4cc1-9cdf-851b8c368b9f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HeIYs0ytX3Aj","executionInfo":{"status":"ok","timestamp":1718950145963,"user_tz":-330,"elapsed":477,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"af806aad-ceb5-4a01-aa33-00ad837c7948"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Bankrupt?                                                   0\n"," ROA(C) before interest and depreciation before interest    0\n"," ROA(A) before interest and % after tax                     0\n"," ROA(B) before interest and depreciation after tax          0\n"," Operating Gross Margin                                     0\n","                                                           ..\n"," Liability to Equity                                        1\n"," Degree of Financial Leverage (DFL)                         1\n"," Interest Coverage Ratio (Interest expense to EBIT)         1\n"," Net Income Flag                                            1\n"," Equity to Liability                                        1\n","Length: 96, dtype: int64"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["\n","Data Analysis and Visulaization"],"metadata":{"id":"E9alb8bCaeHk"}},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":436},"id":"BSMU-tccYhoG","executionInfo":{"status":"ok","timestamp":1718950155027,"user_tz":-330,"elapsed":700,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"d91f8847-3a5b-442e-9a0f-e7302bfdb792"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         Bankrupt?   ROA(C) before interest and depreciation before interest  \\\n","count  5620.000000                                        5620.000000          \n","mean      0.035587                                           0.504531          \n","std       0.185275                                           0.061365          \n","min       0.000000                                           0.000000          \n","25%       0.000000                                           0.475650          \n","50%       0.000000                                           0.501487          \n","75%       0.000000                                           0.535185          \n","max       1.000000                                           0.971530          \n","\n","        ROA(A) before interest and % after tax  \\\n","count                              5620.000000   \n","mean                                  0.557620   \n","std                                   0.067024   \n","min                                   0.000000   \n","25%                                   0.534507   \n","50%                                   0.558929   \n","75%                                   0.588203   \n","max                                   1.000000   \n","\n","        ROA(B) before interest and depreciation after tax  \\\n","count                                        5620.000000    \n","mean                                            0.553249    \n","std                                             0.062814    \n","min                                             0.000000    \n","25%                                             0.526634    \n","50%                                             0.551636    \n","75%                                             0.584306    \n","max                                             1.000000    \n","\n","        Operating Gross Margin   Realized Sales Gross Margin  \\\n","count              5620.000000                   5620.000000   \n","mean                  0.607656                      0.607640   \n","std                   0.017558                      0.017545   \n","min                   0.000000                      0.000000   \n","25%                   0.600434                      0.600418   \n","50%                   0.605911                      0.605897   \n","75%                   0.614019                      0.613992   \n","max                   1.000000                      1.000000   \n","\n","        Operating Profit Rate   Pre-tax net Interest Rate  \\\n","count             5620.000000                 5620.000000   \n","mean                 0.998698                    0.797125   \n","std                  0.014330                    0.014173   \n","min                  0.000000                    0.000000   \n","25%                  0.998967                    0.797383   \n","50%                  0.999022                    0.797460   \n","75%                  0.999097                    0.797574   \n","max                  0.999778                    1.000000   \n","\n","        After-tax net Interest Rate  \\\n","count                   5620.000000   \n","mean                       0.809018   \n","std                        0.014980   \n","min                        0.000000   \n","25%                        0.809309   \n","50%                        0.809373   \n","75%                        0.809467   \n","max                        1.000000   \n","\n","        Non-industry income and expenditure/revenue  ...  \\\n","count                                   5620.000000  ...   \n","mean                                       0.303628  ...   \n","std                                        0.012293  ...   \n","min                                        0.000000  ...   \n","25%                                        0.303462  ...   \n","50%                                        0.303522  ...   \n","75%                                        0.303577  ...   \n","max                                        1.000000  ...   \n","\n","        Net Income to Total Assets   Total assets to GNP price  \\\n","count                  5619.000000                5.619000e+03   \n","mean                      0.806967                1.999181e+07   \n","std                       0.041485                3.976602e+08   \n","min                       0.000000                0.000000e+00   \n","25%                       0.796400                9.125890e-04   \n","50%                       0.809804                2.203618e-03   \n","75%                       0.825882                5.988523e-03   \n","max                       1.000000                9.820000e+09   \n","\n","        No-credit Interval   Gross Profit to Sales  \\\n","count          5619.000000             5619.000000   \n","mean              0.623815                0.607656   \n","std               0.013063                0.017559   \n","min               0.000000                0.000000   \n","25%               0.623591                0.600433   \n","50%               0.623853                0.605914   \n","75%               0.624152                0.614017   \n","max               1.000000                1.000000   \n","\n","        Net Income to Stockholder's Equity   Liability to Equity  \\\n","count                          5619.000000           5619.000000   \n","mean                              0.840301              0.280585   \n","std                               0.015833              0.015776   \n","min                               0.000000              0.000000   \n","25%                               0.840080              0.276991   \n","50%                               0.841114              0.278905   \n","75%                               0.842326              0.281706   \n","max                               1.000000              1.000000   \n","\n","        Degree of Financial Leverage (DFL)  \\\n","count                          5619.000000   \n","mean                              0.027669   \n","std                               0.017188   \n","min                               0.000789   \n","25%                               0.026791   \n","50%                               0.026810   \n","75%                               0.026929   \n","max                               1.000000   \n","\n","        Interest Coverage Ratio (Interest expense to EBIT)   Net Income Flag  \\\n","count                                        5619.000000              5619.0   \n","mean                                            0.565320                 1.0   \n","std                                             0.013707                 0.0   \n","min                                             0.000000                 1.0   \n","25%                                             0.565158                 1.0   \n","50%                                             0.565262                 1.0   \n","75%                                             0.565794                 1.0   \n","max                                             1.000000                 1.0   \n","\n","        Equity to Liability  \n","count           5619.000000  \n","mean               0.047419  \n","std                0.052148  \n","min                0.008500  \n","25%                0.023984  \n","50%                0.033110  \n","75%                0.051959  \n","max                1.000000  \n","\n","[8 rows x 96 columns]"],"text/html":["\n","  <div id=\"df-3bb9d0e2-1bfa-422c-8010-a6d9f9738346\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Bankrupt?</th>\n","      <th>ROA(C) before interest and depreciation before interest</th>\n","      <th>ROA(A) before interest and % after tax</th>\n","      <th>ROA(B) before interest and depreciation after tax</th>\n","      <th>Operating Gross Margin</th>\n","      <th>Realized Sales Gross Margin</th>\n","      <th>Operating Profit Rate</th>\n","      <th>Pre-tax net Interest Rate</th>\n","      <th>After-tax net Interest Rate</th>\n","      <th>Non-industry income and expenditure/revenue</th>\n","      <th>...</th>\n","      <th>Net Income to Total Assets</th>\n","      <th>Total assets to GNP price</th>\n","      <th>No-credit Interval</th>\n","      <th>Gross Profit to Sales</th>\n","      <th>Net Income to Stockholder's Equity</th>\n","      <th>Liability to Equity</th>\n","      <th>Degree of Financial Leverage (DFL)</th>\n","      <th>Interest Coverage Ratio (Interest expense to EBIT)</th>\n","      <th>Net Income Flag</th>\n","      <th>Equity to Liability</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>5620.000000</td>\n","      <td>...</td>\n","      <td>5619.000000</td>\n","      <td>5.619000e+03</td>\n","      <td>5619.000000</td>\n","      <td>5619.000000</td>\n","      <td>5619.000000</td>\n","      <td>5619.000000</td>\n","      <td>5619.000000</td>\n","      <td>5619.000000</td>\n","      <td>5619.0</td>\n","      <td>5619.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>0.035587</td>\n","      <td>0.504531</td>\n","      <td>0.557620</td>\n","      <td>0.553249</td>\n","      <td>0.607656</td>\n","      <td>0.607640</td>\n","      <td>0.998698</td>\n","      <td>0.797125</td>\n","      <td>0.809018</td>\n","      <td>0.303628</td>\n","      <td>...</td>\n","      <td>0.806967</td>\n","      <td>1.999181e+07</td>\n","      <td>0.623815</td>\n","      <td>0.607656</td>\n","      <td>0.840301</td>\n","      <td>0.280585</td>\n","      <td>0.027669</td>\n","      <td>0.565320</td>\n","      <td>1.0</td>\n","      <td>0.047419</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.185275</td>\n","      <td>0.061365</td>\n","      <td>0.067024</td>\n","      <td>0.062814</td>\n","      <td>0.017558</td>\n","      <td>0.017545</td>\n","      <td>0.014330</td>\n","      <td>0.014173</td>\n","      <td>0.014980</td>\n","      <td>0.012293</td>\n","      <td>...</td>\n","      <td>0.041485</td>\n","      <td>3.976602e+08</td>\n","      <td>0.013063</td>\n","      <td>0.017559</td>\n","      <td>0.015833</td>\n","      <td>0.015776</td>\n","      <td>0.017188</td>\n","      <td>0.013707</td>\n","      <td>0.0</td>\n","      <td>0.052148</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000789</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0.008500</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>0.475650</td>\n","      <td>0.534507</td>\n","      <td>0.526634</td>\n","      <td>0.600434</td>\n","      <td>0.600418</td>\n","      <td>0.998967</td>\n","      <td>0.797383</td>\n","      <td>0.809309</td>\n","      <td>0.303462</td>\n","      <td>...</td>\n","      <td>0.796400</td>\n","      <td>9.125890e-04</td>\n","      <td>0.623591</td>\n","      <td>0.600433</td>\n","      <td>0.840080</td>\n","      <td>0.276991</td>\n","      <td>0.026791</td>\n","      <td>0.565158</td>\n","      <td>1.0</td>\n","      <td>0.023984</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>0.501487</td>\n","      <td>0.558929</td>\n","      <td>0.551636</td>\n","      <td>0.605911</td>\n","      <td>0.605897</td>\n","      <td>0.999022</td>\n","      <td>0.797460</td>\n","      <td>0.809373</td>\n","      <td>0.303522</td>\n","      <td>...</td>\n","      <td>0.809804</td>\n","      <td>2.203618e-03</td>\n","      <td>0.623853</td>\n","      <td>0.605914</td>\n","      <td>0.841114</td>\n","      <td>0.278905</td>\n","      <td>0.026810</td>\n","      <td>0.565262</td>\n","      <td>1.0</td>\n","      <td>0.033110</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000</td>\n","      <td>0.535185</td>\n","      <td>0.588203</td>\n","      <td>0.584306</td>\n","      <td>0.614019</td>\n","      <td>0.613992</td>\n","      <td>0.999097</td>\n","      <td>0.797574</td>\n","      <td>0.809467</td>\n","      <td>0.303577</td>\n","      <td>...</td>\n","      <td>0.825882</td>\n","      <td>5.988523e-03</td>\n","      <td>0.624152</td>\n","      <td>0.614017</td>\n","      <td>0.842326</td>\n","      <td>0.281706</td>\n","      <td>0.026929</td>\n","      <td>0.565794</td>\n","      <td>1.0</td>\n","      <td>0.051959</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1.000000</td>\n","      <td>0.971530</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.999778</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>1.000000</td>\n","      <td>9.820000e+09</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 96 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bb9d0e2-1bfa-422c-8010-a6d9f9738346')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3bb9d0e2-1bfa-422c-8010-a6d9f9738346 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3bb9d0e2-1bfa-422c-8010-a6d9f9738346');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-256cf032-1678-4807-9e6a-98734b1c3552\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-256cf032-1678-4807-9e6a-98734b1c3552')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-256cf032-1678-4807-9e6a-98734b1c3552 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["plt.figure(figsize=(6, 4))\n","sns.countplot(x='Bankrupt?', data=df)\n","plt.title('Class Distribution of Bankrupt and Non-Bankrupt Companies')\n","plt.xlabel('Bankrupt?')\n","plt.ylabel('Count')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":410},"id":"eNryLFi_Yqxh","executionInfo":{"status":"ok","timestamp":1718950175354,"user_tz":-330,"elapsed":1360,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"b3f2505d-0966-4061-c0cd-a8893fcea64a"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 600x400 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","\n","X_train = df.drop('Bankrupt?', axis=1)\n","y_train = df['Bankrupt?']\n","\n","imputer = SimpleImputer(strategy='mean')\n","X_train_imputed = imputer.fit_transform(X_train)\n","\n","rf_model = RandomForestClassifier()\n","rf_model.fit(X_train_imputed, y_train)\n","\n","feature_importances = pd.Series(rf_model.feature_importances_, index=X_train.columns)\n","top_features = feature_importances.nlargest(20)"],"metadata":{"id":"wzthir8NBBT4","executionInfo":{"status":"ok","timestamp":1718950475591,"user_tz":-330,"elapsed":5796,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(\n","    df.drop('Bankrupt?', axis=1), df['Bankrupt?'], test_size=0.2, random_state=42)\n","\n","imputer = SimpleImputer(strategy='mean')\n","X_train_imputed = imputer.fit_transform(X_train)\n","X_test_imputed = imputer.transform(X_test)\n","\n","rf_model = RandomForestClassifier()\n","rf_model.fit(X_train_imputed, y_train)\n","\n","fpr, tpr, _ = roc_curve(y_test, rf_model.predict_proba(X_test_imputed)[:, 1])\n","roc_auc = auc(fpr, tpr)"],"metadata":{"id":"PHbTlbPhBH8r","executionInfo":{"status":"ok","timestamp":1718950663827,"user_tz":-330,"elapsed":1454,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, precision_score, recall_score, roc_auc_score, classification_report, roc_curve, auc\n","\n","X = df.drop('Bankrupt?', axis=1)\n","y = df['Bankrupt?']\n","\n","imputer = SimpleImputer(strategy='mean')\n","X = imputer.fit_transform(X)\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n","\n","rf_model = RandomForestClassifier(n_estimators=100, random_state=42)\n","rf_model.fit(X_train, y_train)\n","\n","y_pred = rf_model.predict(X_test)\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","\n","print(f'Accuracy: {accuracy}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hiSiLZ2Z_b9k","executionInfo":{"status":"ok","timestamp":1718950770605,"user_tz":-330,"elapsed":5821,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"f4e63a47-86f5-4f34-ec56-f12dd9ec6811"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9691577698695136\n","Precision: 0.5789473684210527\n","Recall: 0.2\n","ROC AUC Score: 0.9040298757036955\n","Classification Report:\n","              precision    recall  f1-score   support\n","\n","           0       0.97      1.00      0.98      1631\n","           1       0.58      0.20      0.30        55\n","\n","    accuracy                           0.97      1686\n","   macro avg       0.78      0.60      0.64      1686\n","weighted avg       0.96      0.97      0.96      1686\n","\n"]}]},{"cell_type":"code","source":["rf_model = RandomForestClassifier(n_estimators=100, random_state=42)\n","rf_model.fit(X_train, y_train)\n","\n","y_pred = rf_model.predict(X_test)\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","\n","print(f'Accuracy: {accuracy}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YSsoxyqddeWy","executionInfo":{"status":"ok","timestamp":1718950955653,"user_tz":-330,"elapsed":5292,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"b755c6e9-e2e8-495f-c16a-d04c7dd4e7d5"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9691577698695136\n"]}]},{"cell_type":"markdown","source":["NAIVE BAYES"],"metadata":{"id":"p8jcHnJ7eVQt"}},{"cell_type":"code","source":["from sklearn.naive_bayes import GaussianNB\n","\n","nb_model = GaussianNB()\n","nb_model.fit(X_train, y_train)\n","\n","y_pred = nb_model.predict(X_test)\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ILYiyJBGdA9","executionInfo":{"status":"ok","timestamp":1718951263617,"user_tz":-330,"elapsed":656,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"24889465-9a6a-40c0-ec6a-d49ed77c434e"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9033214709371293\n"]}]},{"cell_type":"markdown","source":["KNN"],"metadata":{"id":"Xc_XtZDIetls"}},{"cell_type":"code","source":["from sklearn.neighbors import KNeighborsClassifier\n","\n","knn_model = KNeighborsClassifier(n_neighbors=5)\n","knn_model.fit(X_train, y_train)\n","\n","y_pred = knn_model.predict(X_test)\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GKtYwynBIEFO","executionInfo":{"status":"ok","timestamp":1718951319079,"user_tz":-330,"elapsed":432,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"84538ab9-1700-4a2c-e1d6-f957d2a04fd2"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.966785290628707\n"]}]},{"cell_type":"markdown","source":["DECISION TREE\n"],"metadata":{"id":"KvKBfM41fEI4"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","\n","clf = DecisionTreeClassifier(random_state=42)\n","\n","clf.fit(X_train, y_train)\n","\n","y_pred = clf.predict(X_test)\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c8DliqgVIyWO","executionInfo":{"status":"ok","timestamp":1718951357508,"user_tz":-330,"elapsed":1634,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"55f0ed1d-6f71-4327-f43c-15c41acd49d3"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9424673784104389\n"]}]},{"cell_type":"markdown","source":["GRADIENT BOOSTING"],"metadata":{"id":"f-Y37GgUfIqA"}},{"cell_type":"code","source":["from sklearn.ensemble import GradientBoostingClassifier\n","\n","clf = GradientBoostingClassifier(random_state=42)\n","\n","clf.fit(X_train, y_train)\n","\n","y_pred = clf.predict(X_test)\n","\n","accuracy = accuracy_score(y_test, y_pred)\n","\n","print(f'Accuracy: {accuracy}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v70IVsz6KeDe","executionInfo":{"status":"ok","timestamp":1718951457513,"user_tz":-330,"elapsed":19164,"user":{"displayName":"Shreel Thakur","userId":"15747544030036942285"}},"outputId":"cc76ad6c-4ef1-4571-dcf6-dbac61f8c186"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.9691577698695136\n"]}]}]}